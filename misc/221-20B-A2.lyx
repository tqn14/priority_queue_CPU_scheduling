#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size largest
CSCE 221 Cover Page
\end_layout

\begin_layout Standard
\align center

\size largest
Programming Assignment #2
\size larger
 
\end_layout

\begin_layout Standard
\align center

\size large
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size larger
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Thu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Nguyen
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

230002254
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\size large

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size larger
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tqn14
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tqn14@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\size default

\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more: 
\begin_inset CommandInset href
LatexCommand href
name "Aggie Honor System Office"
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset

 
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lecture slides
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
online
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dr.Teresa Leyk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
various sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eCampus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
listed below
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
https://www.hackerearth.com/practice/notes/heaps-and-priority-queues/
\end_layout

\begin_layout Standard
https://www.geeksforgeeks.org/insertion-sort-doubly-linked-list/
\end_layout

\begin_layout Standard
https://www.geeksforgeeks.org/iterators-c-stl/
\end_layout

\begin_layout Standard
https://www.geeksforgeeks.org/list-cpp-stl/
\end_layout

\begin_layout Standard
http://www.cplusplus.com/forum/beginner/222542/
\end_layout

\begin_layout Standard
http://www.cplusplus.com/articles/1AUq5Di1/
\begin_inset VSpace 3cm
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Thu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nguyen
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset

06/21/2020
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Newpage newpage
\end_inset


\series bold
\size larger
Programming Assignment 2 (100 points)
\end_layout

\begin_layout Standard
\align center

\size large
Due June 16 at midnight to eCampus
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Objectives:
\end_layout

\begin_layout Itemize
Implement the Minimum Priority Queue (MPQ) ADT based on three data structures:
 vector, linked list and binary heap.
\end_layout

\begin_layout Itemize
Test each MPQ operation for correctness using integer type for data structures.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Make templated MPQ class and test it using the three data structures described
 above.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Apply MPQ for scheduling computer processes (jobs).
\end_layout

\begin_layout Standard
This programming assignment consists of three phases.
\end_layout

\begin_layout Enumerate

\series bold
(30 points) Phase 1
\series default
: Implement the minimum priority queue (MPQ) with the operations: 
\family typewriter
remove_min()
\family default
, 
\family typewriter
is_empty()
\family default
, and 
\family typewriter
insert()
\family default
 using two different implementations based on
\end_layout

\begin_deeper
\begin_layout Enumerate
vector of type 
\family typewriter
T
\end_layout

\begin_layout Enumerate
linked list of type 
\family typewriter
T
\end_layout

\begin_layout Standard
where 
\family typewriter
T
\family default
 is template typename parameter.
 The STL vector and linked list containers are allowed to be used for the
 implementation of MPQs.
 
\end_layout

\begin_layout Standard
Test the priority queue data operations for correctness using initially
 
\family typewriter
int
\family default
 type as 
\family typewriter
T
\family default
, and then in the Phase 3 
\family typewriter
T
\family default
 is 
\family typewriter
CPU_Job
\family default
.
 In your report provide implementation details of MPQs, the running time
 in terms of big-O asymptotic notation of each operation, and an evidence
 of testing the operations.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
(20 points) Phase 
\series default
2: Implement the binary heap operations: 
\family typewriter
remove_min()
\family default
, 
\family typewriter
is_empty()
\family default
, and 
\family typewriter
insert()
\family default
, and then implement MPQ based on the binary heap of type 
\family typewriter
T
\family default
.
 The description of the binary heap can be found in the textbook Chapter
 6 and on the lecture slides: 
\emph on

\begin_inset Quotes eld
\end_inset

Binary Heap
\emph default

\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\emph on
Priority Queues
\emph default

\begin_inset Quotes erd
\end_inset

.
 You can use the STL vector to implement binary heap data structure.
 Test
\family typewriter
 
\family default
the binary heap ADT using initially 
\family typewriter
int
\family default
 as T, and then 
\family typewriter
CPU_Jobs
\family default
 as 
\family typewriter
T
\family default
 (in Phase 3).
 In your report provide implementation details, the running time in terms
 of big-O asymptotic notation of each operation, and an evidence of testing
 the operations.
 
\end_layout

\begin_layout Enumerate

\series bold
(20 points) Phase 
\series default
3: Write an application based on the MPQs implemented in Phase 1 and 2 to
 simulate the scheduling of computer processes (called also 
\begin_inset Quotes eld
\end_inset


\emph on
jobs
\emph default

\begin_inset Quotes erd
\end_inset

 in operating systems) to run on a single CPU.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
You will use the struct 
\family typewriter
CPU_Job
\family default
.
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false"
inline false
status open

\begin_layout Plain Layout

struct CPU_Job { 
\end_layout

\begin_layout Plain Layout

   int ID;     // process ID
\end_layout

\begin_layout Plain Layout

   int length; // process length
\end_layout

\begin_layout Plain Layout

   int prior;  // process priority
\end_layout

\begin_layout Plain Layout

   CPU_Job(int a=0, int b=0, int c=0) : ID(a), length(b), prior(c) {};
\end_layout

\begin_layout Plain Layout

   // compares jobs' priorities and/or IDs
\end_layout

\begin_layout Plain Layout

   bool operator<(const CPU_Job& job); 
\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Description.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The simulation of CPU running is done by using a loop where one iteration
 corresponds to the unit of the CPU time called a 
\begin_inset Quotes eld
\end_inset


\emph on
time slice
\emph default
.
\begin_inset Quotes erd
\end_inset

 The value of the loop index is the current CPU time, and it goes from 
\begin_inset Formula $1$
\end_inset

 to a certain integer limit.
 From among all jobs waiting to be processed in a time slice, the CPU must
 select the job with highest priority (see the definition of the highest
 priority below) and run it.
 
\end_layout

\begin_layout Enumerate
The jobs to run the CPU are read from an input text file (in the directory
 
\family typewriter
PA2-DataFiles
\family default
) where each line represents a job.
 The format of each line consists of 3 integers:
\emph on
 job ID, length, priority.
 
\end_layout

\begin_layout Enumerate
Job IDs are unique positive integers (they do not need to be consecutive
 numbers).
 
\end_layout

\begin_layout Enumerate
A job length is the time CPU will spend running it (we assume here that
 we know it).
 The job length is measured in time slices and, to simplify, is an integer
 between 
\begin_inset Formula $1$
\end_inset

 and 10, inclusive.
 When the CPU runs a job, its job length is decreasing until it is zero,
 and then it is removed from the CPU queue and another job is selected.
\end_layout

\begin_layout Enumerate
A job priority is represented also by an integer between 
\begin_inset Formula $-20$
\end_inset

 (highest priority is negative 20) and 
\begin_inset Formula $19$
\end_inset

 (lowest priority is 19), inclusive as well.
 Jobs are scheduled based on their priorities: highest priority jobs will
 be scheduled first.
 Pay attention to the fact that the 
\emph on
higher
\emph default
 priority means 
\emph on
lower
\emph default
 numerical value (therefore we can use Minimum PQ).
 If two or more jobs have the same priority value, break ties by job IDs:
 a job with a lower ID is scheduled first.
\end_layout

\begin_deeper
\begin_layout Standard
File input format (given):
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
job ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $281$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $12$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $825$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $111$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $19$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $382$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-7$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
We assume that jobs cannot be interrupted – once a job is scheduled on the
 CPU, it runs for a number of time slices equal to its length.
\end_layout

\end_deeper
\begin_layout Enumerate
Your program should create an output text file (possibly with a name based
 on the input file but it is not required).
 For each time slice, print one line to this file containing job ID of the
 job currently running the CPU, its priority, and the remaining time to
 run (in time slices).
 With every loop iteration the length of the job running the CPU is decreased
 by 1.
 The format of the output line is as follows: 
\begin_inset Quotes eld
\end_inset


\emph on
Job [job ID here] with length 
\begin_inset Formula $n$
\end_inset

 and priority 
\begin_inset Formula $p$
\end_inset


\emph default

\begin_inset Quotes erd
\end_inset

.
 For example: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size small
Job 382 with length 3 and priority -7
\end_layout

\begin_layout LyX-Code

\size small
Job 382 with length 2 and priority -7
\end_layout

\begin_layout LyX-Code

\size small
Job 382 with length 1 and priority -7
\end_layout

\begin_layout LyX-Code

\size small
Job 825 with length 2 and priority 5
\end_layout

\begin_layout LyX-Code

\size small
Job 825 with length 1 and priority 5
\end_layout

\begin_layout LyX-Code

\size small
Job 281 with length 1 and priority 12
\end_layout

\begin_layout LyX-Code

\size small
Job 111 with length 4 and priority 19
\end_layout

\begin_layout LyX-Code

\size small
Job 111 with length 3 and priority 19
\end_layout

\begin_layout LyX-Code

\size small
Job 111 with length 2 and priority 19
\end_layout

\begin_layout LyX-Code

\size small
Job 111 with length 1 and priority 19
\end_layout

\begin_layout LyX-Code

\size small
No more jobs to run
\end_layout

\begin_layout Standard
If there are no jobs to run, the program issues the output: 
\begin_inset Quotes eld
\end_inset


\emph on
No more jobs to run
\emph default

\begin_inset Quotes erd
\end_inset

, and stops.
\end_layout

\end_deeper
\begin_layout Enumerate
Reading data from the input files and writing data into the output files
 with the required format.
 There are 5 test input files available in the directory 
\family typewriter
PA2-DataFiles
\family default
.
 They contain 4, 10, 100, 1000, 10000 and 100000 jobs (input lines), respectivel
y.
 Run your initial tests on a small input file with less than 11 jobs.
 And later on test your program on larger files.
 Your program should run correctly on TA's input.
 
\end_layout

\end_deeper
\begin_layout Enumerate
(
\series bold
10 points
\series default
) For large files, get timings for MPQ run on CPU_Job with large number
 of jobs (of size 1000, 10000, 100000 jobs).
 There will be 9 timings for your implementations: vector, linked list and
 binary heap.
\end_layout

\begin_deeper
\begin_layout Standard
To time the MPQ algorithm, you use the function 
\family typewriter
clock()
\family default
 and/or the C++ class 
\family typewriter
chrono
\family default
.
 You need to discuss it in your report and compare them with the theoretical
 results presented in class.
 
\end_layout

\begin_layout Enumerate
Here is the example of how to use the function 
\family typewriter
clock()
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false"
inline false
status open

\begin_layout Plain Layout

#include <ctime>
\end_layout

\begin_layout Plain Layout

//...
\end_layout

\begin_layout Plain Layout

clock_t t1, t2;
\end_layout

\begin_layout Plain Layout

t1 = clock(); // start
\end_layout

\begin_layout Plain Layout

//...
\end_layout

\begin_layout Plain Layout

// operations you want to measure the running time
\end_layout

\begin_layout Plain Layout

/...
\end_layout

\begin_layout Plain Layout

t2 = clock(); // stop
\end_layout

\begin_layout Plain Layout

double diff = (double)(t2 - t1)*1000/CLOCKS_PER_SEC;
\end_layout

\begin_layout Plain Layout

cout << "Timing: " << diff << 
\begin_inset Quotes eld
\end_inset

 milisec
\begin_inset Quotes erd
\end_inset

 << endl; 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You use the STL class 
\family typewriter
chrono
\family default
 together with the class 
\family typewriter
steady_clock
\family default
.
 You can find information about the class chrono on this website:
\begin_inset Newline newline
\end_inset

 
\begin_inset CommandInset href
LatexCommand href
target "http://www.cplusplus.com/reference/chrono/"
literal "false"

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here is an example how to use it:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false"
inline false
status open

\begin_layout Plain Layout

#include <chrono>
\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

using namespace chrono;
\end_layout

\begin_layout Plain Layout

// ...
\end_layout

\begin_layout Plain Layout

steady_clock::time_point t1 = steady_clock::now(); //start
\end_layout

\begin_layout Plain Layout

//...
\end_layout

\begin_layout Plain Layout

// operations you want to measure the running time
\end_layout

\begin_layout Plain Layout

//...
\end_layout

\begin_layout Plain Layout

steady_clock::time_point t2 = steady_clock::now(); //stop
\end_layout

\begin_layout Plain Layout

duration<double> time_span = duration_cast<duration<double>>(t2 - t1);
\end_layout

\begin_layout Plain Layout

cout << "Timing: " << time_span.count()*1000 << " milisec" << endl;   
\end_layout

\begin_layout Plain Layout

// ...
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Instructions 
\end_layout

\begin_deeper
\begin_layout Enumerate
Your C++ files can be named as follows: 
\family typewriter
main.cpp
\family default
, 
\family typewriter
vector-mpq.h,
\family default
 
\family typewriter
linkedlist-mpq.h,
\family default
 
\family typewriter
binaryheap-mpq.h
\family default
 and (optional) 
\family typewriter
cpu-job.h.
\end_layout

\begin_layout Enumerate
Compile your program by
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
c++ -std=c++11 *.cpp -o pa2
\end_layout

\end_deeper
\begin_layout Enumerate
Run your program by executing 
\family typewriter
./pa2
\end_layout

\begin_layout Enumerate
Test your code and collect output data for your report for small sizes (4
 and 10 jobs) only.
\end_layout

\end_deeper
\begin_layout Enumerate
Submission
\end_layout

\begin_deeper
\begin_layout Enumerate
Zip the C++ files above and any additional files (input and output files).
 
\end_layout

\begin_layout Enumerate
"turnin" your zip file to eCampus.
 
\end_layout

\begin_layout Enumerate
(
\series bold
20 points
\series default
) Submit an electronic copy of cover page, report (see below) in lab to
 your lab TA.
 Typed report made preferably using "\SpecialChar LyX
/\SpecialChar LaTeX
"
\end_layout

\begin_deeper
\begin_layout Enumerate
(2 pts) Program description; purpose of the assignment.
\end_layout

\begin_layout Enumerate
(2 pts) Instructions to compile and run your program; input and output specifica
tions.
\end_layout

\begin_layout Enumerate
(5 pts) Programming style, and program organization and design: naming,
 indentation, whitespace, comments, declaration, variables and constants,
 expressions and operators, error handling and reporting, files organization,
 operators overloading.
 templates.
 Please refer to the 
\begin_inset CommandInset href
LatexCommand href
name "PPP-style"
target "http://www.stroustrup.com/Programming/PPP-style.pdf"
literal "false"

\end_inset

 document.
 
\end_layout

\begin_layout Enumerate
(5 pts) Discussion of the implementation and running time in the terms of
 big-O.
\end_layout

\begin_layout Enumerate
(6 pts) Presenting the testing results, use a table to present timings for
 each implementation (9 timings in total).
\end_layout

\end_deeper
\end_deeper
\end_body
\end_document
